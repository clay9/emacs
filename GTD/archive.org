#+STARTUP: overview
* ***********软件***************
* Emacs
** org       -mode
*** GTD设计 v4.0
**** 思路的设计
     5楼 到 地面视角
     | 楼数 | 功能             | 说明 | 备注    |
     |------+------------------+------+---------|
     | 5楼  | 人生规划 && 原则 |      |         |
     |------+------------------+------+---------|
     | 4楼  | 3年目标          |      |         |
     |------+------------------+------+---------|
     | 3楼  | 1年目标          |      |         |
     |------+------------------+------+---------|
     | 2楼  | 职责范围         |      |         |
     |------+------------------+------+---------|
     | 1楼  | 项目             |      | GTD管理 |
     |------+------------------+------+---------|
     | 地面 | 行动清单         |      | GTD管理 |
     |------+------------------+------+---------|
     备注 : GTD管理的其实是 1楼 && 地面的清单
     
**** 流程的设计
     ---------------------------------------
                       |
	    	       |
                       |
	    	       |-------------------\ capture
	    	       |	 	    \
	    	       |
                       +
       	      	   +-------+
	      	   | inbox |
       	      	   +-------+
       	    	   /  	\    --
	          / 	 \     \--
       	         /    	  \       \-- --------------- \	refile
                / 	   \         \-		       \
               /  	    \	       \--
              /       	     \	          \
       	   +-------+   	    +--------+   +--------+
       	   | todo  |   	    | project|	 | trash  |
	   +-------+   	    +--------+	 +--------+
       	     |
       	     |
	     |
       	     +-------------------------\ archive
	     |		      	        \
             |
	     |
             |
       	   +-------+ 
	   |archive| 
  	   +-------+ 

**** 文件的设计
     | 文件名      | 说明     | 备注                       |
     |-------------+----------+----------------------------|
     | inbox.org   | 收集箱   | 1. 不区分时间, 不区分场景  |
     |             |          | 2. 灵光一闪即可扔进去保存  |
     |             |          | 3. 每天清空                |
     |-------------+----------+----------------------------|
     | task.org    | 任务清单 | 1. 场景标签                |
     |             |          | 2. 四象限约束              |
     |-------------+----------+----------------------------|
     | project.org | 项目清单 | 1. 凡是steps>1的都属于项目 |
     |             |          | 2. 自带archive             |
     |             |          | 3. 自带trash               |
     |-------------+----------+----------------------------|
     | trash.org   | 垃圾箱   | 1. 保存inbox中无用的东西   |
     |             |          | 2. 保存task中无用的东西    |
     |-------------+----------+----------------------------|
     | archive.org | 参考资料 | 1. 有参考价值的东西        |
     |-------------+----------+----------------------------|
     备注:
     1. task 与 project的唯一区别 
	task只有one step,  project的steps > 1
     2. 理论上, 能操作的文件只有2个,  inbox.org 和 archive的.org
	其他文件都是通过流程来操作的, 不应该手动去干预

**** TODO的设计
     | 名称     | 功能         | 备注 |
     |----------+--------------+------|
     | TODO     | 等待自己处理 |      |
     |----------+--------------+------|
     | WAITTING | 等待他人完成 |      |
     |----------+--------------+------|
     | DONE     | 完成         |      |
     |----------+--------------+------|
     | CANCEL   | 取消         |      |
     |----------+--------------+------|
     备注:
     1. 针对的对象是下一步行动清单
     2. project中的下一步行动即是最上层的行动;
	task中的下一步行动是依据四象限法则来确定的.
     3. TODO与WAITTING的含义, 表示该行动正在或即将处理

**** TAGS的设计
     | 名称      | 功能     | 备注            |
     |-----------+----------+-----------------|
     | home      | 家中处理 | 场景            |
     |-----------+----------+-----------------|
     | company   | 公司处理 | 场景            |
     |-----------+----------+-----------------|
     | mobile    | 路上处理 | 场景            |
     |-----------+----------+-----------------|
     | urgent    | 紧急     | 四象限-时间     |
     |-----------+----------+-----------------|
     | important | 重要     | 四象限-重要程度 |
     |-----------+----------+-----------------|
     备注:
     1. 针对的对象 task.org中的任务 && project.org中的下一步行动
     2. task中的任务一定要打标签
     
**** Agent的设计
     
     | 命令  | 含义                                      | 备注                                                         |
     |-------+-------------------------------------------+--------------------------------------------------------------|
     | C-c a | 查看当下的操作                            | 当下可能是一天, 一周或者一月, 甚至一年                       |
     |-------+-------------------------------------------+--------------------------------------------------------------|
     | C-c n | 当下没有操作, 则可以查看next step         |                                                              |
     |-------+-------------------------------------------+--------------------------------------------------------------|
     | C-c p | 如果没有next step, 则优先在project中选择, |                                                              |
     | C-c f | 其次在tag四象限中选择                     | 注: task中的step必须打上标签, 否则会导致该step在流程中找不到 |
     |-------+-------------------------------------------+--------------------------------------------------------------|
     |       | 如果四象限或者project中都没有,            |                                                              |
     |       | 则应该反思, 最近是不是太闲了              |                                                              |
     |-------+-------------------------------------------+--------------------------------------------------------------|

*** ************************************************************
*** 特性: habit
    1. habit到了指定time, 没有appt的提示????
       解决方案:
       1) org-mode自身是不带appt功能的,需要借助emacs的appt功能
          org-mode中有个function org-agenda-to-appt,可以实现上面的要求
       2) 每次在agenda中增加todo-items(有timestamp)时候,需要将其注册到appt中
	  在org-mode中添加有timestamps的todo-items不会自动触发appt的事件,需要手动完成
	  这个是借助agenda中的rebuilding事件来做到刷新appt事件的
	  具体的实现查看emacs配置文件
	  (dir) - Org mode - Agenda view - Built_in agenda views -Weekly/daily agenda

*** 特性: appt
    org-mode自身是不带appt功能的, 使用的emacs自带的appt

    1. 如何增加appointment
       解决方案:
       (app-add message)
       只是临时增加, 关闭emacs会使appt失效
       (可以写进.emacs, 冒充永久appt)

    2. 如何查看appointment list?
       解决方案:
       使用appt-delete算是变相的实现了
       虽然无法以list形式显示,
       但是会以时间排序,逐个显示
       虽不完美, 但足以~
*** 特性: MobileOrg
    方案流程
     1. PC端配置MobileOrg
       	具体见.emacs
     2. 寻找WebDAV server
       	现在使用的是坚果云
     3. curl同步PC端到webDAV server
       	这一块非常纠结
       	起初使用的ssh的scp,发现scp貌似不支持https?
       	后来使用了curl, 结果发现curl不支持目录的上传.....
       	导致.emacs中mobileorg的配置十分难看, 有机会应该改掉这块!
       	方法有2:
       	1) 换一种工具取代curl  -- 更倾向于这一种方式
       	2) 使用regular expression -- 貌似curl支持的不好


    总览图

     +-----------+ push	       	+--------------+
     | PC端      |-------------->| WwbDAV server|
     |           |<--------------|              |
     +-----------+ pull	       	+--------------+
       	       	       	       	       |	  ^
				       |	  |
				       |	  |
				       v	  |
                                 +--------------+
 			       	 | Mobile       |
                                 |              |
                                 +--------------+

*** ************************************************************
*** 配置: agenda-view
    1. todo-list不显示scheduled和deadline的todo items
       解决方案:
       a. varible :: org-agenda-todo-ignore-scheduled
       b. varible :: org-agenda-todo-ignore-deadlines

    2. todo-list不显示子todo items
       解决方案
       a. org-agenda-todo-list-sublevels

*** ************************************************************
*** 语法: time-stamp选择
    添加time-stamp时, 不要在calendar中移动,效率太低
    使用以下2种方式即可:
    1. 使用简约的时间格式
       17-1-1  => 2017-01-01
    2. 使用时间间隔
       now = [2016-12-28 Wed]
       +1d  => 2016-12-29

    具体见(dir) - Org mode - Dates and times - Creating timestamps - The date/time promt

*** 语法: 时间repeate
    org-mode repeate格式
    +   .+   ++区别

    1. "+"
       backlog 可以积压的item
    2. ".+"
       specific date, no backlog 在特定日期完成的item
       ep: call mother
       每周六给mother打电话, 不可积压(或者说现在的操作不会影响之前)
    3. "++"
       specific interval, no backlog 在特定间隔完成的item
       ep: change batteries
       每隔1月更换电池, 不可积压
*** 语法: agenda-view定制
     配置见.emacs
     1. filter效果
       	filter对象有todo, tags, agenda
       	比如常用的org-agenda-list其实就是
       	(setq org-agenda-custom-commands
          '(("a" agenda)))
       	具体的语法可以C-h v org-agenda-custom-commands
     2. combination效果
	实现单window显示多view
     3. custome
	支持每个view独立设置variable属性

*** 语法: table计算
    @ 表示行； $表示列
    < 表示第一;   > 表示最后；

    例子:
    @<  第一行
    $>  最后一列
    @<< 第二行(更建议使用 @2)

    对table使用C-c} 可以查看行列值
    
*** ************************************************************
*** 如何优雅的refile
    虽然通过修改org-refile-tagets已经成功的完成了files间的node转移
    但是
    1. 在refile的时候，如何为node添加格式，比如"TODO" timestamp等
       解决方案 :: timestamp可以通过org-log-refile来实现
                   添加TODO暂时实现不了, refile好像不会改变source
                   现在的org-refile只能做到对target做出判断
                   暂时关闭该问题

    2. 如何快速在refile之间穿梭, 类似于capture的C-u C-c c
       解决方案 :: org-refile-goto-last-stored
                   类比 org-capture-goto-last-stored

*** ************************************************************
*** 常用命令
    具体以 .emacs.d/lisp/init-global-shortkey.el中的GTD部分为准

    C-c c       Caputre
    C-c w       refile
    C-c y       archive

    C-c a       agenda展示
    
** artist    -mode
   1. 基本功能
      1) line                 :: C-c C-a l
         -- proy_line         :: C-c C-a p
      2) rectngle             :: C-c C-a r
         -- squares           :: C-c C-a s
      3) elipse               :: C-c C-a e
         -- circle            :: C-c C-a c
      4) spray                :: C-c C-a S
         very funny!
   2. 个人配置
      1) 开启/关闭org-mode    :: C-c r t  -- 详见emacs配置
      2) artist-key-set-point :: C-@ | C-SPC
      3) 重载SPC,RET,DEL,TAB  :: 详见emacs配置
   3. 使用总结
      1. 短小精悍
      2. 定制性太差
** calendar  -mode
   1. sexq entry
      sexq entry是一种特殊的diary entry,支持elisp,且已经内置了很多函数和变量
      常用的有:
       	1) anniversary
       	2) block
       	3) cyclic
       	4) folating

   2. fancy-display 和 simple-display
      diary支持这2种显示日记方式
      一般都是使用fancy-display(官方推荐)

** CC        -mode
   1. 基本功能
      1) 缩放
      2) 高亮显示

*** 配置接口

   (setq  XXX)
破坏all-style, 不推荐
       |
       |
       | 	      (c-add-style XXX) --推荐
       |       	                |
       | 	    	       	|
       | 	    		|                               (交互式)
       | 	    	  +-------------+      		    临时性的, 不推荐
       | 	       	  | style-list  |                          |
       | 		  |             |      			   |
       | 		  +-------------+      			   |
       |       	       	       	|   	       			   |
       | 			|   	       			   |
       | 	         (c-set-style XXX)     	       	       	   |
       | 	(add hook 'c-code-common-hook 'XXXX)		   |
       | 	       	       	|   	       			   |
      \| /		       \| / 	       			  \| /
       \/		        \/				   \/
---------------------------------------------------------------------------

 *****************************************************************
 *  +----      -     -         X	  +--   	  --\	 *
 *  |          |\   /|        / \        /      	 (	 *
 *  +---       | \ / |       o---o      |       	  +--+	 *
 *  |          |  X  |      /     \      \      	      )	 *
 *  +----      |     |     /       \      +--   	   \--	 *
 *							         *
 *****************************************************************

** helm      -mode
   基本功能:
   改善用户交互体验
   主要体现在
   1) buffers-list
   2) M-x
   3) find-files

   具体配置参见 init-helm-mode.el

** yasnippet -mode
   功能 : 模板工具
   配置 : C-c C-v 查看针对当前mode的模板
          C-c C-n 增加模板
	  tab     由$1 跳转到 $2
   
** company   -mode
   company-mode的工作机制
   company-mode为前端front-ends,其依赖后端back-ends
   【back-ends】
   back-ends是针对各个语言的解析
   比如微软有自身的VS开发后端, 苹果有Clang, 以及GNU的gtags等

** graphviz  -mode
   dot图

   [[https://blog.csdn.net/sd10086/article/details/52979462][属性指导文档]]

   | 关键字   | 意义     | 备注                                                                        |
   |----------+----------+-----------------------------------------------------------------------------|
   | digraph  | 有向主图 |                                                                             |
   |----------+----------+-----------------------------------------------------------------------------|
   | graph    | 无向主图 |                                                                             |
   |----------+----------+-----------------------------------------------------------------------------|
   | subgraph | 子图     |                                                                             |
   |----------+----------+-----------------------------------------------------------------------------|
   | lable    | 文字     |                                                                             |
   |----------+----------+-----------------------------------------------------------------------------|
   | color    | 颜色     |                                                                             |
   |----------+----------+-----------------------------------------------------------------------------|
   | shape    | 形状     | record方块, 默认为ellipse椭圆, diamond选择框, none没有边框                  |
   |----------+----------+-----------------------------------------------------------------------------|
   | style    | 样式     | dashed填充                                                                  |
   |----------+----------+-----------------------------------------------------------------------------|
   | rank     | 排序     | same...每一个rank="same"的block中的所有节点都会在同一条线（横线或竖线）上  |
   |----------+----------+-----------------------------------------------------------------------------|

** *************************************************************
** IDE for CC-mode
*** 合格Development(IDE)
    
    | 模块 | 功能    | 备注 |
    |------+---------+------|
    | 编辑 | 1. 查看 |      |
    |      | 2. 书写 |      |
    |      | 3. 检查 |      |
    |------+---------+------|
    | 编译 |         |      |
    |------+---------+------|
    | 调试 |         |      |
    |------+---------+------|
    | 发布 |         |      |
    |------+---------+------|

*** ************************************************************
*** 编辑器
    包含以下几个mode

    | 功能     | mode                         | 备注               |
    |----------+------------------------------+--------------------|
    | 格式规范 | cc-mode                      |                    |
    |----------+------------------------------+--------------------|
    | 自动补全 | company-mode(front-ends)     | 需要back-ends      |
    |          | company-c-headers(back-ends) |                    |
    |----------+------------------------------+--------------------|
    | 智能括号 | smartparens                  |                    |
    |----------+------------------------------+--------------------|
    | 代码折叠 | hs-minor-mode                |                    |
    |----------+------------------------------+--------------------|
    | 模板文件 | yasnippet-mode               |                    |
    |----------+------------------------------+--------------------|
    | 代码跳转 | helm-gtags(front-ends)       | 需要back-ends      |
    | 查找引用 | global(back-ends)            | apt install global |
    |----------+------------------------------+--------------------|
    | 拼写检查 | flyspell-mode                | 单词拼写           |
    |----------+------------------------------+--------------------|
    | 语法检查 | flycheck-mode                | 动态,实时检查      |
    |----------+------------------------------+--------------------|
    | 目录列表 | sr-speedbar                  | 显示目录,文件      |
    |----------+------------------------------+--------------------|
    | 语法高亮 | symbol-overlay-mode          |                    |
    |----------+------------------------------+--------------------|

*** 编译器
    | 功能     | mode             | 备注                |
    |----------+------------------+---------------------|
    | 语法解析 | gtags-mode       | 隶属于global        |
    |----------+------------------+---------------------|
    | 编译器   | compilation-mode | front-backs,依赖g++ |
    |----------+------------------+---------------------|
*** 调试器
*** ************************************************************
*** 常用命令
    1. 代码折叠 -- hs-minor-mode
       函数折叠 hs-hide-all  hs-show-all
       块表折叠 Shift-table (hs-minor-mode中配置)

    2. 查找
       查找之前需要 执行gtags

       C-;          .cpp - .h
                    函数声明 -- 函数定义
                    引用查找

       C-'          定义查找
       C-j          上个位置
       C-m          下个位置
                    其实就是list表中前后移动

    3. 行号
       C-,          显示行号
       C-.          跳转行

** *************************************************************
** 快捷键
   1. RET绑定了C-m
** 常用命令
   1. org-set-property      设置property
   2. customize-group       设置face属性
   3. package-list-packages 加载插件
      
* GNU
** global
   功能:
   global是tag解析器
   tag为对象，比如变量，函数或者类等

   命令:
   gtags  -- 生成供helm-gtags使用的数据
   htags  -- 生成html的数据， 命令 htags --suggest
   global -- 查看

   缺陷：
   global并不完美，比如无法解析局部变量

** gcc
    1. 查看搜索路径
	g++ | gcc -print-serach-dirs (可通过--help查看)
    2. 设定搜索路径
	gcc  C_INCLUDE_PATH
	g++  CPLUS_INCLUDE_PATH

	ep: export CPLUS_INCLUDE_PATH=/usr/lib/
	_扩展1_
	1. 输出 echo $C_INCLUDE_PATH
	2. 调用 $C_INCLUDE_PATH
	3. 赋值 export C_INCLUDE_PATH
	4. 删除变量 unset C_INCLUDE_PATH
	5. C++调用 string strValue(getenv("C_INCLUDE_PATH")
       
* ***********个人***************
* 个人账号密码
   | 功能                 | 商家      | 账号                 | 密码           | 备注         |
   |----------------------+-----------+----------------------+----------------+--------------|
   | QQ                   | 腾讯      | 377133665            | Yezi@501031219 |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | u3d                  | unity     | 377133665@qq.com     | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | gmail                | google    | w377133665@gamil.com | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | steam                | stream    | w501031219           | Wx@501031219   |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | 百度云盘             | 百度      | 13407105971          | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | bilibili             |           | 13407105971          | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | AppleID              | 苹果      | 377133665@qq.com     | Wcq@501031219  |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | 暴雪战网账号         | 暴雪      | 377133665@qq.com     | Wx50103129     |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | 暴雪战网账号         | 暴雪      | 460253673@qq.com     | Wx501031219    | 魔兽世界专用 |
   |----------------------+-----------+----------------------+----------------+--------------|
   | 中国人民银行信贷查询 |           | clay2018             | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | github               |           | clay9                | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|
   | Parallels            | Parallels | 377133665@qq.com     | Wx501031219    |              |
   |----------------------+-----------+----------------------+----------------+--------------|

* ***********公司**************
* 资质申请

   | 名称                 | 厂家  | 要求                         | 实际时间  | 备注                     |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 微信开放平台         |       |                              |           |                          |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 微信开发者资质认证   | 微信  | 1. 企业营业照                | 4-5小时   | 只要配合审查员, 认证很快 |
   | (步骤1)              |       | 2. 法人身份证                |           |                          |
   |                      |       | 3. 对公账户                  |           |                          |
   |                      |       | 4. 公章(企业章)              |           |                          |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 第一类               | 微信  | 1. 应用图标                  | 4个工作日 | 默认开放了:              |
   | 移动应用申请 (步骤2) |       | 2. 应用官网                  |           | 1. 分享到朋友圈          |
   |                      |       | 3. 应用下载地址              |           | 2. 发送给朋友            |
   |                      |       | 4. 应用签名                  |           | 3. 微信登录              |
   |                      |       | 5. 包名                      |           | 4. 智能接口              |
   |                      |       |                              |           | 5. 一次性订阅消息        |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 第一类               | 微信  |                              |           | 建议先申请公众号         |
   | 微信支付 申请(步骤3) |       |                              |           |                          |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   |----------------------+-------+------------------------------+-----------+--------------------------|
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 微信公众号           |       |                              |           |                          |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 微信公众号申请       | 微信  | 1. 微信号所绑银行卡          | 4-5小时   | 只要配合审查员, 认证很快 |
   |                      |       | 支持实名认证                 |           |                          |
   |                      |       | 2. 公章                      |           |                          |
   |                      |       | 3. 营业执照                  |           |                          |
   |                      |       | 4. 对公账户                  |           |                          |
   |----------------------+-------+------------------------------+-----------+--------------------------|
   |----------------------+-------+------------------------------+-----------+--------------------------|
   |----------------------+-------+------------------------------+-----------+--------------------------|
   | 苹果开发者账号       | Apple | 1. visa卡或mastercard        | 12天      | D-U-N-S 等了9天          |
   |                      |       | 2. D-U-N-S(邓白氏, 企业需要) |           | 苹果等了3天              |
   |                      |       |                              |           | 邓白氏需要：营业执照     |
   |----------------------+-------+------------------------------+-----------+--------------------------|


   注:
   1. 订阅号, 服务号, 企业号的差异
      详见 https://kf.qq.com/faq/120911VrYVrA130805byM32u.html
      订阅号: 个人|组织, 每天可4条消息, 无服务功能
      服务号: 组织, 服务功能, 例如银行查询等
      企业号: 企业内部管理使用
   2. 同一个邮箱只能绑定微信产品的一种帐号
      比如 微信公众号平台 与 微信开放平台 需要2个邮箱

* 企业账号密码

   | 功能       | 商家             | 性质 | 账号                   | 密码                | 备注          | 负责人 | 状态     |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 对公账户   | 民生银行         | 公   | *                      | *                   |               | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 第三方账户 | 支付宝           | 公   | postmaster@45quyou.com | Wx@201881(登录密码) |               | 王成庆 |          |
   |            |                  |      |                        | Wx@501031(支付密码) |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 商铺       | 淘宝             | 公   | postmaster@45quyou.com | Wx@20180906         | 绑定手机      | 王成庆 |          |
   |            |                  |      |                        |                     | 134-0710-5971 |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-1      | 微信开放平台     | 公   | postmaster@45quyou.com | 45quyou.com         | 绑定微信      | 王成庆 | 微信支付 |
   |            |                  |      |                        |                     | w377133665    |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-2      | 微信公众平台     | 公   | 377133665@qq.com       | Wx501031219         | 绑定微信      | 王成庆 | 微信支付 |
   |            |                  |      |                        |                     | w377133665    |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-3      | 支付宝           | 公   |                        |                     |               | 王成庆 | 等支付宝 |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-4      | 苹果开发者       | 公   | 377133665@qq.com       | 见个人账号密码表    |               | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-5      | mob(ShareSDK)    | 公   | 377133665@qq.com       | Wx501031219         |               | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-6      | 魔窗             | 公   | 377133665@qq.com       | WCQ@377133665       |               | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | API-7      | 腾讯语音SDK(GME) | 公   | QQ账号 377133665       |                     |               | 王成庆 | 绑定微信 |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 企业资源1  | 万网             | 私   | 177-2048-2894          | Wx501031219         | 域名          | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 企业资源2  | 智联招聘         | 公   | 45quyou                | Wx501031219         |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 企业资源3  | 猪八戒           | 公   | 13407105971            | @45quyou            |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   |            | 猪八戒           | 公   | 支付密码               | Wx@501031           |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 企业资源4  | ICP              | 公   | clay99                 | Wx501031            |               | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | CSDN       |                  | 公   | w501031219             | Wx@501031219        |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | 蒲公英     | 苹果ipa发布使用  | 公   | 13407105971            | Wx501031219         |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | Gitlab     |                  | 公   | root                   | Wx@377133665        |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   |            |                  | 私   | clay                   | Wx@501031219        |               |        |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|
   | fir.im     |                  | 公   | 80012498@qq.com        | abcd810515          |               | 王成庆 |          |
   |------------+------------------+------+------------------------+---------------------+---------------+--------+----------|

* ***********待归档*************
* Finished Tasks
* 项目应用
** Java的一些基础
*** Activity
    Activity是 java中类的实例化
    
    activity存在于一些堆栈中, 似于线程的操作

    Activity必须在mainfest.xml中进行注册，才可以启动

    oncreate -- onstart -- onresume -- stop

    activity有显示启动和隐式启动
    
*** AndroidMainFest.xml
    类似于activity管理器的配置文件

    决定了哪个activity先启动， 决定了哪些activity可以启动
    
    inter-filter决定了activity是否是main activity，也决定了activity在什么情形下可以隐式启动
   
** shareSDK指导文档
*** 基本说明
    shareSDK是第三方插件(如果把微信,QQ等比作第一方), 其集成了很多平台, 可以实现快速接入

*** 操作步骤
    1. 在官网下载对应的SDK包
       包里面有Android工程 和 U3D(如果sdk是针对u3d)工程
    2. 编译Android工程, 为自己的U3D工程添加插件
       Android工程的编译目标是U3D的插件
    3. 在自己的U3D工程中 导入并修改官方的u3d Demo
    4. 完成

*** F&Q
    1. 问: 官方的android工程打不开?
       答: 根据不同的IDE, 有不同注意事项
       1) Eclisp IDE的时候, compiler和jdk版本要匹配
       2) Android stutio, 需要将工程import import
         官方的android工程是Eclisp的, 需要转换
    2. 问: Android Stutio如何编译官方的android工程?
       答: Android Stutio编译的时候需要有以下几个注意点
       1) 编译器gradlew版本
	  1) 修改工程下gradle/wrapper/gradle-wrapper.properties文件中的distributionUrl版本为4.1
	  2) 修改工程下build.gradle文件中的classpath版本为4.1 -- 只影响gradlew指令, 不修改也可以
       2) app文件的taget从a
	  pp改为android module
	  1) 修改工程下app/built.gradle文件中的plugin为apply plugin: 'com.android.library'
	  2) 删除工程下app/built.gradle文件中的applicationId -- 仅当application才有
       3) app文件的taget sdk版本修改
	  1) 修改工程下app/built.gradle文件中的compileSdkVersion和targetSdkVersion为21 (与安装的sdk版本匹配)
	  2) 修改工程下app/src/main/AndroidManifest.xml中的targetSdkVersion为21
	  3) 以上的sdk版本 应当与u3d编译时的选项一致
       4) app文件依赖性修改
	  修改工程下app/built.gradle文件中的dependence为implementation
	  具体原因, 详见Android Stutio的六种编译方式
       5) 包名的修改
	  1) 修改工程下app/src/main/Androidmanifest.xml中的manifest以及微信登录字段中的包名为your包名
	  2) 修改工程下app/src/main/java/cn/share/demo下的所有文件的包名前缀替换为your包名 -- 不需要修改目录名字
       6) 认证资质的修改
	  修改工程下app/src/main/Androidmanifest.xml中application字段中的Mob-AppKey和Mob-AppSecret为自己的
       7) rebuilt-project 完成
	  其余的东西无需改动；
	  生成的aar包在工程下app/build/outputs/aar/app-debug.aar；
	  生成的jar包在工程下app/build/intermidiates/bundles/debug/classes.jar
    3. 问: 自己的U3D工程如何与官方demo结合编译?
       答: 自己的U3D工程编译有以下几个注意点
       1) shareSDK插件的导入
	  1) 双击官方U3D工程中的ShareSDKForU3D.unitypackage (其实际就是将官方U3D工程下的Assets/Plugins导入到自己的U3D下)
	     不要导入demo.cs和ShareSDK-Unity.unity以及Plugins/Android/ShareSDK/DemoCallback.jar
	  2) 导入的时候需要注意路径问题, 比如正常的是Pligins/Android/ShareSDK/xml | libs | res, 千万不能写作Plugins/Android/xml
	     否则, 会导致自己U3D工程打包后没有图像...因为路径错了
	  3) 建议先删除自己的Plugins目录, 然后执行动作1)， 然后再将自己差异化的插件导入(注: 将android studio工程中lib下的jar包全部导入)
	  4) 将Android工程生成的classes.jar改名为com.quyou.tielinmajang.jar并copy到自己U3D工程下的Plugins/Android/ShareSDK/libs/
	  5) 将Android工程下AndroidManifest.xmlcopy到自己U3D工程下的Plugins/Android/ShareSDK/
       2) 修改资质认证
	  1) 官方的资质认证
	     1) Plugins/ShareSDK/ShareSDK.cs 有1处。 位置在成员变量处
	     2) Plugins/ShareSDK/ShareSDKConfig.cs 有1处。 位置在Config函数中
	  2) 微信登录的资质认证
	     1) Plugins/ShareSDK/ShareSDKDevInfo.cs 有1处。 位置在微信登录的函数中
       3) 选择使用平台
	  修改 Plugins/ShareSDK/ShareSDKDevInfo.cs 的成员变量。 不需要的平台直接注释相应的成员变量即可
       4) 调用ShareSDK的脚本文件
	  1) 官方的demo写的比较乱, 不推荐
	  2) 高手可以自己写
	  3) 可以直接使用之前的人写的 AuthAndShare.cs
       5) 将ShareSDK.cs和AuthAndShare.cs挂在控件上。 U3D基本功, 不详述, 只想吐槽
       6) 选择keyStore 编译。 完成
	  keystroe只影响签名
	  使用包名A,生成的apk其签名 应该与在微信开放平台上的包名A的签名一致

    4. 问题解答
       1) 问: U3D打包的时候出现 can't convert class to index
	  答: jar包问题, 排查jar包的依赖型是否都存在， 执行问题3中的1)中的3)
	  
*** 大坑
    1. 分享的content中 image url必须存在， 无论本地还是远端
       否则, 微信分享会调用失败
    2. shareSDK的脚本中的 byPass Approve 必须去掉勾选
       不勾选, 分享的webpage可能变为图片(应用信息)
	     
** 魔窗sdk接入
   :PROPERTIES:
   :ARCHIVE_TIME: 2017-12-30 Sat 13:16
   :ARCHIVE_FILE: ~/GTD/inbox.org
   :ARCHIVE_CATEGORY: inbox
   :END:
*** 魔窗简介
    一键入局
*** 流程
   1. 包名修改
      1) web控制后台
	 注意此处的包名 应该与微信的包名一致
      2) 代码的AndroidMainfest.xml 1处修改
      3) 工程下mlink_demo/src/java/main SplashActivity共1处
	 MainActivity 与 SecondActivity并没有使用到
   2. mlink key的修改
      1) web控制后台 2处修改
	 1) 假设web后台中的key 为tielingmajiang
	 2) 则在后台的url中应该写入 tielingmajiang?key1=:key1&key2=:key2
	    前面的tielingmajiang应该与key一致。?之后的为动态参数
      2) 跳转页面代码
	 已舍弃:_在注册函数register()中的key应该与web控制后台中的一致  1处修改_
	 最新版:不需要在 register()中修改, 只要修改 MlinkRouter即可
   3. 动态参数的修改
      1) web后台的配置  1处
	 1) URL中需要配置 为 XXX?key1=:key1&key2=:key2
      2) 跳转界面代码中的解析 1处

